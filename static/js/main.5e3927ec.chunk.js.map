{"version":3,"sources":["components/MovieComponent.js","components/MovieInfoComponent.js","App.js","index.js"],"names":["MovieContainer","styled","div","CoverImage","img","MovieName","span","InfoColumn","MovieInfo","MovieComponent","props","movie","Title","Year","imdbID","Type","Poster","onClick","onMovieSelect","src","alt","Container","MovieInfoComponent","useState","movieInfo","setMovieInfo","selectedMovie","useEffect","Axios","get","API_KEY","then","response","data","imdbRating","Language","Rated","Released","Runtime","Genre","Director","Actors","Plot","AppName","Header","SearchBox","SearchIcon","MovieImage","SearchInput","input","MovieListContainer","Placeholder","App","searchQuery","updateSearchQuery","movieList","updateMovieList","timeoutId","updateTimeoutId","fetchData","searchString","a","Search","placeholder","value","onChange","e","clearTimeout","target","timeout","setTimeout","length","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e3927ec.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst MovieContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  width: 280px;\n  box-shadow: 0 3px 10px 0 #aaa;\n  cursor: pointer;\n`;\nconst CoverImage = styled.img`\n  object-fit: cover;\n  height: 362px;\n`;\nconst MovieName = styled.span`\n  font-size: 18px;\n  font-weight: 600;\n  color: black;\n  margin: 15px 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst InfoColumn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nconst MovieInfo = styled.span`\n  font-size: 16px;\n  font-weight: 500;\n  color: black;\n  white-space: nowrap;\n  overflow: hidden;\n  text-transform: capitalize;\n  text-overflow: ellipsis;\n`;\nconst MovieComponent = (props) => {\n  const { Title, Year, imdbID, Type, Poster } = props.movie;\n\n  return (\n    <MovieContainer onClick={() => props.onMovieSelect(imdbID)}>\n      <CoverImage src={Poster} alt={Title} />\n      <MovieName>{Title}</MovieName>\n      <InfoColumn>\n        <MovieInfo>Year : {Year}</MovieInfo>\n        <MovieInfo>Type : {Type}</MovieInfo>\n      </InfoColumn>\n    </MovieContainer>\n  );\n};\nexport default MovieComponent;\n","import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { API_KEY } from \"../App\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 20px 30px;\n  border-bottom: 1px solid black;\n`;\nconst CoverImage = styled.img`\n  object-fit: cover;\n  height: 362px;\n`;\nconst InfoColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 20px;\n`;\nconst MovieName = styled.span`\n  font-size: 22px;\n  font-weight: 600;\n  color: black;\n  margin: 15px 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-transform: capitalize;\n\n  text-overflow: ellipsis;\n`;\nconst MovieInfo = styled.span`\n  font-size: 16px;\n  font-weight: 500;\n  color: black;\n  overflow: hidden;\n  margin: 4px 0;\n  text-transform: capitalize;\n  text-overflow: ellipsis;\n\n  & span {\n    opacity: 0.5;\n  }\n`;\nconst MovieInfoComponent = (props) => {\n  const [movieInfo, setMovieInfo] = useState();\n  const { selectedMovie } = props;\n\n  useEffect(() => {\n    Axios.get(\n      `http://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`,\n    ).then((response) => setMovieInfo(response.data));\n  }, [selectedMovie]);\n  return (\n    <Container>\n      <CoverImage src={movieInfo?.Poster} alt={movieInfo?.Title} />\n      <InfoColumn>\n        <MovieName>\n          {movieInfo?.Type}: {movieInfo?.Title}\n        </MovieName>\n        <MovieInfo>\n          IMDB Rating: <span>{movieInfo?.imdbRating}</span>\n        </MovieInfo>\n        <MovieInfo>\n          Year: <span>{movieInfo?.Year}</span>\n        </MovieInfo>\n        <MovieInfo>\n          Language: <span>{movieInfo?.Language}</span>\n        </MovieInfo>\n        <MovieInfo>\n          Rated: <span>{movieInfo?.Rated}</span>\n        </MovieInfo>\n        <MovieInfo>\n          Released: <span>{movieInfo?.Released}</span>\n        </MovieInfo>\n        <MovieInfo>\n          Runtime: <span>{movieInfo?.Runtime}</span>\n        </MovieInfo>\n        <MovieInfo>\n          Genre: <span>{movieInfo?.Genre}</span>\n        </MovieInfo>\n        <MovieInfo>\n          Director: <span>{movieInfo?.Director}</span>\n        </MovieInfo>\n        <MovieInfo>\n          Actors: <span>{movieInfo?.Actors}</span>\n        </MovieInfo>\n        <MovieInfo>\n          Plot: <span>{movieInfo?.Plot}</span>\n        </MovieInfo>\n      </InfoColumn>\n    </Container>\n  );\n};\nexport default MovieInfoComponent;\n","import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport styled from \"styled-components\";\nimport MovieComponent from \"./components/MovieComponent\";\nimport MovieInfoComponent from \"./components/MovieInfoComponent\";\n\nexport const API_KEY = \"a9118a3a\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst AppName = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst Header = styled.div`\n  background-color: black;\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  align-items: center;\n  padding: 10px;\n  font-size: 25px;\n  font-weight: bold;\n  box-shadow: 0 3px 6px 0 #555;\n`;\nconst SearchBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px 10px;\n  border-radius: 6px;\n  margin-left: 20px;\n  width: 50%;\n  background-color: white;\n`;\nconst SearchIcon = styled.img`\n  width: 32px;\n  height: 32px;\n`;\nconst MovieImage = styled.img`\n  width: 48px;\n  height: 48px;\n  margin: 15px;\n`;\nconst SearchInput = styled.input`\n  color: black;\n  font-size: 16px;\n  font-weight: bold;\n  border: none;\n  outline: none;\n  margin-left: 15px;\n`;\nconst MovieListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  padding: 30px;\n  gap: 25px;\n  justify-content: space-evenly;\n`;\nconst Placeholder = styled.img`\n  width: 120px;\n  height: 120px;\n  margin: 200px;\n  opacity: 50%;\n`;\n\nfunction App() {\n  const [searchQuery, updateSearchQuery] = useState(\"\");\n\n  const [movieList, updateMovieList] = useState([]);\n  const [selectedMovie, onMovieSelect] = useState();\n\n  const [timeoutId, updateTimeoutId] = useState();\n\n  const fetchData = async (searchString) => {\n    const response = await Axios.get(\n      `http://www.omdbapi.com/?s=${searchString}&apikey=${API_KEY}`,\n    );\n    updateMovieList(response.data.Search);\n  };\n\n  const onTextChange = (e) => {\n    clearTimeout(timeoutId);\n    updateSearchQuery(e.target.value);\n    const timeout = setTimeout(() => fetchData(e.target.value), 500);\n    updateTimeoutId(timeout);\n  };\n  return (\n    <Container>\n      <Header>\n        <AppName>\n          <MovieImage src=\"/movie-svgrepo-com.svg\" />\n          React Movie App\n        </AppName>\n        <SearchBox>\n          <SearchIcon src=\"/search-icon.svg\" />\n          <SearchInput\n            placeholder=\"Search Movie\"\n            value={searchQuery}\n            onChange={onTextChange}\n          />\n        </SearchBox>\n      </Header>\n      {selectedMovie && <MovieInfoComponent selectedMovie={selectedMovie} />}\n      <MovieListContainer>\n        {movieList?.length ? (\n          movieList.map((movie, index) => (\n            <MovieComponent\n              key={index}\n              movie={movie}\n              onMovieSelect={onMovieSelect}\n            />\n          ))\n        ) : (\n          <Placeholder src=\"/movie-svgrepo-com.svg\" />\n        )}\n      </MovieListContainer>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}